// server.mjs
import express from 'express';
import fetch from 'node-fetch';
import dotenv from 'dotenv';

dotenv.config();

const app = express();
app.use(express.json());

const TOKEN        = process.env.BOT_TOKEN;      // —Ç–æ–∫–µ–Ω Telegram-–±–æ—Ç–∞
const CHAT_ID      = process.env.CHAT_ID;        // ID —á–∞—Ç–∞/–∫–∞–Ω–∞–ª–∞
const WIX_API_KEY  = process.env.WIX_API_KEY;    // API Key Wix (–ë–ï–ó "Bearer")
const WIX_SITE_ID  = process.env.WIX_SITE_ID;    // metasiteId –∏–∑ –≤–µ–±—Ö—É–∫–∞ Wix
const SECRET_TOKEN = process.env.SECRET_TOKEN;   // —Å–µ–∫—Ä–µ—Ç –¥–ª—è —Å—Å—ã–ª–æ–∫

/* ----------------- helpers ----------------- */
async function sendToTelegram(text, buttons = null) {
  const body = { chat_id: CHAT_ID, text, parse_mode: 'Markdown' };
  if (buttons) body.reply_markup = { inline_keyboard: buttons };

  const res = await fetch(`https://api.telegram.org/bot${TOKEN}/sendMessage`, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify(body)
  });
  return res.json(); // –Ω—É–∂–µ–Ω message_id
}

async function editTelegramMessageMarkup(messageId, buttons) {
  await fetch(`https://api.telegram.org/bot${TOKEN}/editMessageReplyMarkup`, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({
      chat_id: CHAT_ID,
      message_id: messageId,
      reply_markup: { inline_keyboard: buttons }
    })
  });
}

function formatDate(d) {
  if (!d) return '-';
  return new Date(d).toLocaleString('uk-UA', { timeZone: 'Europe/Kiev' });
}

function renderErrorCard(text) {
  const safe = (text || '').replaceAll('<','&lt;');
  return `
  <div style="font-family:sans-serif;padding:24px;background:#fff;border-radius:12px;max-width:780px;margin:40px auto;box-shadow:0 2px 8px rgba(0,0,0,.1)">
    <h2 style="color:#c00;margin:0 0 12px">‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –≤ Wix</h2>
    <div style="white-space:pre-wrap;font-family:ui-monospace,Consolas,monospace;background:#f7f7f8;border:1px solid #eee;border-radius:8px;padding:12px;max-height:360px;overflow:auto">${safe || '(empty body)'}</div>
    <p style="color:#666">–ü—Ä–æ–≤–µ—Ä—å: <b>WIX_API_KEY</b> (Bookings.ReadWrite), <b>WIX_SITE_ID</b>, –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å <b>bookingId</b> –∏ URL.</p>
  </div>`;
}

function renderOkCard(message, isPaid) {
  return `
  <html><head><meta charset="utf-8"><title>–°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª—ë–Ω</title>
  <style>
    body{font-family:Arial,sans-serif;text-align:center;background:#f4f4f4;padding-top:50px}
    .card{display:inline-block;padding:20px 40px;background:#fff;border-radius:12px;box-shadow:0 2px 8px rgba(0,0,0,.1)}
    h1{color:${isPaid ? 'green' : 'red'}}
  </style></head>
  <body><div class="card"><h1>${message}</h1><p>–ú–æ–∂–Ω–æ –∑–∞–∫—Ä—ã—Ç—å —ç—Ç—É —Å—Ç—Ä–∞–Ω–∏—Ü—É.</p></div></body></html>`;
}

/* --------- –í–ï–ë–•–£–ö –û–¢ WIX ‚Üí —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram --------- */
app.post('/booking', async (req, res) => {
  try {
    const data = req.body?.data;
    if (!data) {
      await sendToTelegram(`‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:\n\`\`\`json\n${JSON.stringify(req.body, null, 2)}\n\`\`\``);
      return res.json({ ok: true });
    }

    const sector    = data.staff_member_name || data.staff_member_name_main_language || '-';
    const startDate = formatDate(data.start_date_by_business_tz);
    const endDate   = formatDate(data.end_date);
    const amount    = data.amount_due || (data.price?.value && data.price?.currency ? `${data.price.value} ${data.price.currency}` : '-');
    const name      = `${data.contact?.name?.first || ''} ${data.contact?.name?.last || ''}`.trim() || '-';
    const phone     = data.contact?.phones?.[0]?.e164Phone || data.booking_contact_phone || '-';
    const bookingId = data.booking_id;

    const msg = `
üì¢ *–ù–æ–≤–∞—è –±—Ä–æ–Ω—å!*
‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ
üèù –°–µ–∫—Ç–æ—Ä: *${sector}*
üìÖ –ù–∞—á–∞–ª–æ: *${startDate}*
üèÅ –ö–æ–Ω–µ—Ü: *${endDate}*
üí∞ –°—É–º–º–∞: *${amount} –≥—Ä–Ω*

üë§ –ö–ª–∏–µ–Ω—Ç: *${name}*
üìû –¢–µ–ª–µ—Ñ–æ–Ω: [${phone}](tel:${phone})
    `.trim();

    // —Å–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º msg_id
    const sent = await sendToTelegram(msg, [[
      { text: '‚úÖ –û–ø–ª–∞—á–µ–Ω–æ',          url: `https://rybnagavan.onrender.com/change-status/${bookingId}?token=${SECRET_TOKEN}&msg_id=TEMP&status=PAID` },
      { text: '‚ùå –ö–ª–∏–µ–Ω—Ç –Ω–µ –ø—Ä–∏–µ—Ö–∞–ª', url: `https://rybnagavan.onrender.com/change-status/${bookingId}?token=${SECRET_TOKEN}&msg_id=TEMP&status=CANCELLED` }
    ]]);

    // –∑–∞—Ç–µ–º –æ–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏, –ø–æ–¥—Å—Ç–∞–≤–ª—è—è —Ä–µ–∞–ª—å–Ω—ã–π message_id
    await editTelegramMessageMarkup(sent.result.message_id, [[
      { text: '‚úÖ –û–ø–ª–∞—á–µ–Ω–æ',          url: `https://rybnagavan.onrender.com/change-status/${bookingId}?token=${SECRET_TOKEN}&msg_id=${sent.result.message_id}&status=PAID` },
      { text: '‚ùå –ö–ª–∏–µ–Ω—Ç –Ω–µ –ø—Ä–∏–µ—Ö–∞–ª', url: `https://rybnagavan.onrender.com/change-status/${bookingId}?token=${SECRET_TOKEN}&msg_id=${sent.result.message_id}&status=CANCELLED` }
    ]]);

    res.json({ ok: true });
  } catch (e) {
    console.error('–û—à–∏–±–∫–∞ /booking:', e);
    res.status(500).json({ ok:false, error:e.message });
  }
});

/* --------- –ö–ù–û–ü–ö–ò: –æ–ø–ª–∞—á–µ–Ω–æ / –Ω–µ –ø—Ä–∏–µ—Ö–∞–ª (—Å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π) --------- */
app.get('/change-status/:bookingId', async (req, res) => {
  try {
    const { bookingId } = req.params;
    const { token, msg_id, status } = req.query;

    if (token !== SECRET_TOKEN) {
      return res.status(403).send('<h2 style="color:red; font-family:sans-serif;">‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω</h2>');
    }

    const wixHeaders = {
      'Content-Type': 'application/json',
      'Authorization': WIX_API_KEY,  // –í–ê–ñ–ù–û: –±–µ–∑ "Bearer"
      'wix-site-id' : WIX_SITE_ID
    };

    // —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π POST –∫ Wix —Å –ª–æ–≥–æ–º —Å—Ç–∞—Ç—É—Å–∞ –∏ —Ç–µ–ª–∞
    async function wixFetch(url, bodyObj = {}) {
      const r = await fetch(url, {
        method: 'POST',
        headers: wixHeaders,
        body: JSON.stringify(bodyObj) // –≤—Å–µ–≥–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º JSON (–¥–∞–∂–µ –ø—É—Å—Ç–æ–π {})
      });
      const text = await r.text();    // —á–∏—Ç–∞–µ–º –∑–∞—Ä–∞–Ω–µ–µ, —á—Ç–æ–±—ã –Ω–µ —Ç–µ—Ä—è—Ç—å —Ç–µ–ª–æ
      return { ok: r.ok, status: r.status, text };
    }

    if (status === 'PAID') {
      const result = await wixFetch(
        `https://www.wixapis.com/bookings/v2/bookings/${bookingId}:markAsPaid`,
        {}
      );
      if (!result.ok) {
        return res.status(502).send(renderErrorCard(`HTTP ${result.status}\n${result.text}`));
      }
      await editTelegramMessageMarkup(msg_id, [[{ text: '‚úÖ –û–ø–ª–∞—á–µ–Ω–æ' }]]);
      return res.send(renderOkCard('üí∞ –û–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞', true));
    }

    if (status === 'CANCELLED') {
      const result = await wixFetch(
        `https://www.wixapis.com/bookings/v2/bookings/${bookingId}:cancel`,
        { cancellationReason: 'NO_SHOW' }
      );
      if (!result.ok) {
        return res.status(502).send(renderErrorCard(`HTTP ${result.status}\n${result.text}`));
      }
      await editTelegramMessageMarkup(msg_id, [[{ text: '‚ùå –ù–µ —Å–æ—Å—Ç–æ—è–ª–∞—Å—å' }]]);
      return res.send(renderOkCard('üö´ –ë—Ä–æ–Ω—å –æ—Ç–º–µ–Ω–µ–Ω–∞ (–∫–ª–∏–µ–Ω—Ç –Ω–µ –ø—Ä–∏–µ—Ö–∞–ª)', false));
    }

    return res.status(400).send('<h2 style="color:red; font-family:sans-serif;">‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å</h2>');
  } catch (e) {
    console.error('–û—à–∏–±–∫–∞ /change-status:', e);
    res.status(500).send('<h2 style="color:red; font-family:sans-serif;">‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞</h2>');
  }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`‚úÖ Server –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});
